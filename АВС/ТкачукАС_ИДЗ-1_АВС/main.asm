# main.asm

.include "macrolib.asm"
.data
.align 2
	array_A: .space 40 	# максимум 10 целых чисел
	array_B: .space 40 	# максимум 10 целых чисел
.global the_end
.text
main:
	la a3, array_A		# a3 содержит адрес первого элемента массива A
	jal input_A 		# Заполнение массива A
	# После заполнения a4 содержит размер массива A в байтах

	# Вывод массива A
	print_string("Array A: ")
	la a5, array_A   	# a5 = адрес массива A
	# a4 уже содержит размер массива A в байтах
	jal output_array	# Вывод всех элементов массива A

	# Подготовка к заполнению массива B
	la a5, array_B
	# a5 содержит адрес первого элемента массива B
	# a3 содержит адрес первого элемента массива A
	# Требуемое количество байт находится в регистре a4 (размер массива A)
	jal filling_B		# После filling_B: массив B заполнен
	# Получаем количество элементов в массиве B из a0
	mv s5, a0           # s5 количество элементов в массиве B

	# Обновляем a4, чтобы содержать размер массива B в байтах
	slli a4, s5, 2    	# a4 = s5 * 4 (количество байт в массиве B)

	# Вывод массива B
	print_string("Array B: ")
	# a5 содержит адрес первого элемента массива B
	# a4 содержит размер массива B в байтах
	jal output_array	# Вывод всех элементов массива B

the_end:
	li a7, 10 
	ecall
